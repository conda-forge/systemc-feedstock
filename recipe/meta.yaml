{% set version = "3.0.0_pub_rev_20231129" %}
# We will treat upstream '_pub_rev_' tags like what CFEP-5 calls 'dev'
# '_pub_rev_' is for Public Review and I don't see any indication that they
# are release candiates.  So, leave rc open for later use if they also
# will have rc relases later on.
{% set conda_version = version.replace('_pub_rev_','dev') %}
{% set major_minor = ".".join(version.split(".")[0:2]) %}

# tried to do this instead of having preprocessor selectors
# everywhere but was having trouble with getting it to work in
# staged-recipes with the build_all.py. I vaguely remember this
# maybe only working when in feedstock.  Should try again there
{% if target_platform and target_platform.startswith("win-") %}
  {% set Library = "Library/" %}
{% else %}
  {% set Library = "" %}
{% endif %}

package:
  name: systemc-split
  version: {{ conda_version }}

source:
  url: https://github.com/accellera-official/systemc/archive/refs/tags/{{ version }}.tar.gz
  sha256: 580ec20807c2e536eadb9b3d1770c41c5f317b1ad8db0737c4cbf14836cf1c1d
  patches:
    - patches/0001-examples-sysc-2.3-simple_async-needs-PTHREADS.patch  # [not win] https://github.com/accellera-official/systemc/pull/44
    - patches/0002-Do-not-fail-when-installing-non-existent-doc-files-f.patch
    - patches/0003-SYSTEMC_VERSION-consistent-with-20231129-tag.patch
    - patches/0004-pkgconfig-for-real-we-re-running-from-autoreconf.patch

build:
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
    - make      # [not win]
    - autoconf  # [not win]
    - automake  # [not win]
    - libtool   # [not win]
    - cmake


# split package into:
# libsystemc dynamic-library (UNIX only)
# systemc-dev package depends on libsystemc and adds header and unversioned .so symlinks
#             on unix.  Contains headers and systemc.lib static library on Windows
# systemc-static just the static library (skipping for now)
# systemc-doc  documentation including the installed examples on Unix
#              upstream build scripts don't install the examples on Windows so
#              those get included in systemc-dev for testing there via source_files

outputs:
    - name: libsystemc
      build:
          skip: True  # [win]
          run_exports:
              - {{ pin_subpackage('libsystemc', max_pin='x.x.x') }}
      requirements:
          build:
              - {{ compiler('cxx') }}
      files:
          - lib/libsystemc.so.?.?.?*                             # [linux]
          - lib/libsystemc.?.?.?*.dylib                          # [osx]
      test:
        commands:
          - ls -l "$PREFIX"/lib/
          - test -f "$PREFIX"/lib/libsystemc"$SHLIB_EXT".{{ version }}  # [linux]
          - test -f "$PREFIX"/lib/libsystemc.{{ version }}"$SHLIB_EXT"  # [osx]
      about:
        home: https://systemc.org/
        summary: 'The language for System-level design, modeling and verification'
        description: |
          Runtime dynamically-linked library only.

          SystemC(TM) addresses the need for a system design and verification language that spans hardware
          and software. It is a language built in standard C++ by extending the language with the use of
          class libraries. The language is particularly suited to model system's partitioning, to evaluate
          and verify the assignment of blocks to either hardware or software implementations, and to
          architect and measure the interactions between and among functional blocks. Leading companies in
          the intellectual property (IP), electronic design automation (EDA), semiconductor, electronic
          systems, and embedded software industries currently use SystemC for architectural exploration,
          to deliver high-performance hardware blocks at various levels of abstraction and to develop
          virtual platforms for hardware/software co-design. SystemC has been standardized by the Open
          SystemC Initiative (OSCI) and Accellera Systems Initiative and ratified as IEEE Std. 1666(TM)-2011.
        license: Apache-2.0
        license_family: Apache
        license_file:
          - LICENSE
          - NOTICE
          - src/sysc/packages/boost/LICENSE_1_0.txt
          - src/sysc/packages/qt/copyright.h
        doc_url: https://ieeexplore.ieee.org/document/6134619
        dev_url: https://github.com/accellera-official/systemc

    # cmake build doesn't include the static lib if you ask for dynamic
    #- name: libsystemc-static                                    # [not win]
    #  files:                                                     # [not win]
    #      - lib/libsystemc.a                                     # [not win]
    - name: systemc-doc
      files:
          - Library/share/doc/systemc/  # [win]
          - share/doc/systemc/          # [not win]
      about:
        home: https://systemc.org/
        summary: 'The language for System-level design, modeling and verification'
        description: |
          Documentation installed by upstream build into $PREFIX along with the examples.
          On Windows, the documentation is a bit light but the examples are in here.

          SystemC(TM) addresses the need for a system design and verification language that spans hardware
          and software. It is a language built in standard C++ by extending the language with the use of
          class libraries. The language is particularly suited to model system's partitioning, to evaluate
          and verify the assignment of blocks to either hardware or software implementations, and to
          architect and measure the interactions between and among functional blocks. Leading companies in
          the intellectual property (IP), electronic design automation (EDA), semiconductor, electronic
          systems, and embedded software industries currently use SystemC for architectural exploration,
          to deliver high-performance hardware blocks at various levels of abstraction and to develop
          virtual platforms for hardware/software co-design. SystemC has been standardized by the Open
          SystemC Initiative (OSCI) and Accellera Systems Initiative and ratified as IEEE Std. 1666(TM)-2011.
        license: Apache-2.0
        license_family: Apache
        license_file:
          - LICENSE
          - NOTICE
          - src/sysc/packages/boost/LICENSE_1_0.txt
          - src/sysc/packages/qt/copyright.h
        doc_url: https://ieeexplore.ieee.org/document/6134619
        dev_url: https://github.com/accellera-official/systemc
    - name: systemc-dev
      build:                                                          # [not win]
          run_exports:                                                # [not win]
              - {{ pin_subpackage('libsystemc', max_pin='x.x.x') }}   # [not win]
      requirements:
          build:
              - {{ compiler('cxx') }}
          host:
              # enforce packaging order because we need doc for testing
              - {{ pin_subpackage('systemc-doc', exact=True) }}
          run:                                                   # [not win]
              - {{ pin_subpackage('libsystemc', exact=True) }}   # [not win]
      files:
          - lib/libsystemc.so                                    # [linux]
          - lib/libsystemc.so.?.?                                # [linux]
          - lib/libsystemc.dylib                                 # [osx]
          - lib/libsystemc.?.?.dylib                             # [osx]
          - Library/lib/systemc.lib                              # [win]
          - lib/pkgconfig/systemc.pc                             # [not win]
          - lib/pkgconfig/tlm.pc                                 # [not win]
          - Library/lib/cmake/SystemCLanguage/                   # [win]
          - Library/lib/cmake/SystemCTLM/                        # [win]
          - Library/lib/cmake/SystemCLanguage/                   # [win]
          - Library/lib/cmake/SystemCTLM/                        # [win]
          - Library/include/sysc                                 # [win]
          - Library/include/systemc*                             # [win]
          - Library/include/tlm*                                 # [win]
          - Library/include/tlm_core                             # [win]
          - Library/include/tlm_utils                            # [win]
          - lib/cmake/SystemCLanguage/                           # [not win]
          - lib/cmake/SystemCTLM/                                # [not win]
          - lib/cmake/SystemCLanguage/                           # [not win]
          - lib/cmake/SystemCTLM/                                # [not win]
          - include/sysc                                         # [not win]
          - include/systemc*                                     # [not win]
          - include/tlm*                                         # [not win]
          - include/tlm_core                                     # [not win]
          - include/tlm_utils                                    # [not win]
          - etc/conda/*activate.d/*activate-systemc-dev.sh       # [not win]
      test:
        requires:
          - {{ compiler('cxx') }}
          - {{ pin_subpackage('systemc-doc', exact=True) }}
          - make                                                 # [not win]
          - sed                                                  # [not win]
          - pkg-config                                           # [not win]
        commands:
          - echo on  # [win]
          - xcopy %LIBRARY_PREFIX%\share\doc\systemc\examples examples\ /F /E /H  # [win]
          - cd examples/build-msvc                                             # [win]
          - nmake /nologo CONFIG=Release PLATFORM=x64 VCBUILD=vcbuild check    # [win64]
          - nmake /nologo CONFIG=Release PLATFORM=Win32 VCBUILD=vcbuild check  # [win32]
          - test "$SYSTEMC_HOME" == "$PREFIX"                    # [not win]
          - ls -l "$PREFIX"/lib                                  # [not win]
          - test -f "$PREFIX"/lib/libsystemc"$SHLIB_EXT"         # [not win]
          - test -f "$PREFIX"/lib/libsystemc"$SHLIB_EXT".{{ major_minor }}  # [linux]
          - test -f "$PREFIX"/lib/libsystemc.{{ major_minor }}"$SHLIB_EXT"  # [osx]
          - pkg-config --print-provides systemc                             # [not win]
          - pkg-config --print-errors --exact-version=$PKG_VERSION systemc  # [not win]
          - pkg-config --print-provides tlm                                 # [not win]
          # tlm version is decoupled from systemc, so just make sure pkg-config is there
          - cp -r "$PREFIX"/share/doc/systemc/examples .         # [not win]
          # patch Makefile.rules because we want to use the installed libsystemc
          # AND we want to use the dynamic lib which the linker should be able to find
          - "sed -i 's|$(EXE): $(OBJS) $(SYSTEMC_LIB_DIR)/libsystemc.a|$(EXE): $(OBJS)|' examples/build-unix/Makefile.rules"  # [not win]
          - make -C examples/build-unix -j $CPU_COUNT run        # [linux]
          - make -C examples/build-unix -j $CPU_COUNT check      # [linux]
          # osx ld64 doesn't support '-rpath=' must be '-rpath,'
          - make -C examples/build-unix -j $CPU_COUNT run LDFLAG_RPATH=-Wl,-rpath,    # [osx]
          - make -C examples/build-unix -j $CPU_COUNT check LDFLAG_RPATH=-Wl,-rpath,  # [osx]
      about:
        home: https://systemc.org/
        summary: 'The language for System-level design, modeling and verification'
        description: |
          Everything needed for development using System-C. Headers, unversioned dyn-lib symlinks (unix)
          the static systemc.lib (windows).

          SystemC(TM) addresses the need for a system design and verification language that spans hardware
          and software. It is a language built in standard C++ by extending the language with the use of
          class libraries. The language is particularly suited to model system's partitioning, to evaluate
          and verify the assignment of blocks to either hardware or software implementations, and to
          architect and measure the interactions between and among functional blocks. Leading companies in
          the intellectual property (IP), electronic design automation (EDA), semiconductor, electronic
          systems, and embedded software industries currently use SystemC for architectural exploration,
          to deliver high-performance hardware blocks at various levels of abstraction and to develop
          virtual platforms for hardware/software co-design. SystemC has been standardized by the Open
          SystemC Initiative (OSCI) and Accellera Systems Initiative and ratified as IEEE Std. 1666(TM)-2011.
        license: Apache-2.0
        license_family: Apache
        license_file:
          - LICENSE
          - NOTICE
          - src/sysc/packages/boost/LICENSE_1_0.txt
          - src/sysc/packages/qt/copyright.h
        doc_url: https://ieeexplore.ieee.org/document/6134619
        dev_url: https://github.com/accellera-official/systemc
    - name: systemc
      build:                                                          # [not win]
          run_exports:                                                # [not win]
              - {{ pin_subpackage('libsystemc', max_pin='x.x.x') }}   # [not win]
      requirements:
          run:
              - {{ pin_subpackage('systemc-dev', exact=True) }}
              - {{ pin_subpackage('systemc-doc', exact=True) }}
      about:
        home: https://systemc.org/
        summary: 'The language for System-level design, modeling and verification'
        description: |
          Metapackage containing everything for development and runtime.

          SystemC(TM) addresses the need for a system design and verification language that spans hardware
          and software. It is a language built in standard C++ by extending the language with the use of
          class libraries. The language is particularly suited to model system's partitioning, to evaluate
          and verify the assignment of blocks to either hardware or software implementations, and to
          architect and measure the interactions between and among functional blocks. Leading companies in
          the intellectual property (IP), electronic design automation (EDA), semiconductor, electronic
          systems, and embedded software industries currently use SystemC for architectural exploration,
          to deliver high-performance hardware blocks at various levels of abstraction and to develop
          virtual platforms for hardware/software co-design. SystemC has been standardized by the Open
          SystemC Initiative (OSCI) and Accellera Systems Initiative and ratified as IEEE Std. 1666(TM)-2011.
        license: Apache-2.0
        license_family: Apache
        license_file:
          - LICENSE
          - NOTICE
          - src/sysc/packages/boost/LICENSE_1_0.txt
          - src/sysc/packages/qt/copyright.h
        doc_url: https://ieeexplore.ieee.org/document/6134619
        dev_url: https://github.com/accellera-official/systemc


about:
  home: https://systemc.org/
  summary: 'The language for System-level design, modeling and verification'
  description: |
    SystemC(TM) addresses the need for a system design and verification language that spans hardware
    and software. It is a language built in standard C++ by extending the language with the use of
    class libraries. The language is particularly suited to model system's partitioning, to evaluate
    and verify the assignment of blocks to either hardware or software implementations, and to
    architect and measure the interactions between and among functional blocks. Leading companies in
    the intellectual property (IP), electronic design automation (EDA), semiconductor, electronic
    systems, and embedded software industries currently use SystemC for architectural exploration,
    to deliver high-performance hardware blocks at various levels of abstraction and to develop
    virtual platforms for hardware/software co-design. SystemC has been standardized by the Open
    SystemC Initiative (OSCI) and Accellera Systems Initiative and ratified as IEEE Std. 1666(TM)-2011.
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - NOTICE
    - src/sysc/packages/boost/LICENSE_1_0.txt
    - src/sysc/packages/qt/copyright.h
  doc_url: https://ieeexplore.ieee.org/document/6134619
  dev_url: https://github.com/accellera-official/systemc

extra:
  recipe-maintainers:
    - timkpaine
    - timsnyder
  feedstock-name: systemc
